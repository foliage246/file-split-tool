services:
  # Redis服務
  redis:
    image: redis:7-alpine
    container_name: file_split_redis_prod
    restart: unless-stopped
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - file_split_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend FastAPI服務
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: file_split_backend_prod
    restart: unless-stopped
    environment:
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=production
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - STRIPE_PRICE_ID=${STRIPE_PRICE_ID}
      - FREE_DAILY_LIMIT=${FREE_DAILY_LIMIT:-5}
      - PREMIUM_DAILY_LIMIT=${PREMIUM_DAILY_LIMIT:-50}
      - FREE_FILE_SIZE_LIMIT=${FREE_FILE_SIZE_LIMIT:-10}
      - PREMIUM_FILE_SIZE_LIMIT=${PREMIUM_FILE_SIZE_LIMIT:-100}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT:-587}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - EMAIL_FROM=${EMAIL_FROM}
    volumes:
      - file_storage:/app/storage
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - file_split_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Nginx服務
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: file_split_frontend_prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # SSL certificates directory
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - file_split_network

volumes:
  redis_data:
    driver: local
  file_storage:
    driver: local

networks:
  file_split_network:
    driver: bridge